{"version":3,"file":"ValidationUtils.js","sourceRoot":"","sources":["../../../src/validation/ValidationUtils.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,SAAgB,kBAAkB,CAAC,UAAmB;IACpD,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC7B,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,OAAO,GAAG,UAAU,EAAE,CAAC;AACzB,CAAC;AAND,gDAMC;AAED,MAAa,eAAe;IAC1B,MAAM,CAAC,2BAA2B,CAChC,OAAyD,EACzD,mBAAwC;QAGxC,IAAI,MAAM,GAAQ;YAChB,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;YACtC,MAAM,EAAE,mBAAmB,CAAC,UAAU;YACtC,KAAK,EAAE,mBAAmB,CAAC,KAAK;SACjC,CAAA;QACD,IAAI,mBAAmB,CAAC,WAAW,YAAY,KAAK,EAAE;YACpD,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE;gBAC5D,MAAM,CAAC,aAAa,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAnBD,0CAmBC","sourcesContent":["import { ValidationArguments } from './ValidationArguments';\n\n/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint: unknown): string {\n  if (Array.isArray(constraint)) {\n    return constraint.join(', ');\n  }\n\n  return `${constraint}`;\n}\n\nexport class ValidationUtils {\n  static replaceMessageSpecialTokens(\n    message: string | ((args: ValidationArguments) => string),\n    validationArguments: ValidationArguments\n  ): string {\n\n    let result: any = {\n      property: validationArguments.property,\n      target: validationArguments.targetName,\n      value: validationArguments.value\n    }\n    if (validationArguments.constraints instanceof Array) {\n      validationArguments.constraints.forEach((constraint, index) => {\n        result[`constraint${index + 1}`] = constraintToString(constraint);\n      });\n    }\n\n    return result;\n  }\n}\n"]}